{"version":3,"sources":["component/Statistics/Statistics.module.css","component/Section/Section.module.css","component/FeedbackOptions/FeedbackOptions.js","component/Statistics/Statistics.js","component/Section/Section.js","component/Notification/Notification.js","App.js","index.js","component/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","style","feedbackList","map","option","type","name","onClick","btn","protTypes","PropTypes","arrayOf","string","isRequired","func","Statistics","good","neutral","bad","total","positivePercentage","statisticList","statisticItem","defaultProps","Section","title","children","section","Notification","message","App","state","countFeedbackHandler","event","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","positiveFeedback","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,cAAgB,oC,mBCApFD,EAAOC,QAAU,CAAC,QAAU,2B,oLCEtBC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAMC,aAAtB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SAELC,KAAMF,EACNG,QAASR,EACTC,UAAWC,IAAMO,IALnB,SAOGJ,GALIA,SAYfP,EAAgBY,UAAY,CAC1BX,QAASY,IAAUC,QAAQD,IAAUE,OAAOC,YAC5Cd,gBAAiBW,IAAUI,KAAKD,YAGnBhB,Q,gBCvBTkB,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,8BACE,qBAAIpB,UAAWC,IAAMoB,cAArB,UACE,qBAAIrB,UAAWC,IAAMqB,cAArB,mBAA2CN,KAC3C,qBAAIhB,UAAWC,IAAMqB,cAArB,sBAA8CL,KAC9C,qBAAIjB,UAAWC,IAAMqB,cAArB,kBAA0CJ,KAC1C,qBAAIlB,UAAWC,IAAMqB,cAArB,oBAA4CH,KAC5C,qBAAInB,UAAWC,IAAMqB,cAArB,+BACqBF,EADrB,aAONL,EAAWQ,aAAe,CACxBP,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAWPL,Q,iBChBAS,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAAS1B,UAAWC,IAAM0B,QAA1B,UACE,6BAAKF,IACJC,MCDQE,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KC+DCC,E,4MA3DbC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,qBAAuB,SAAAC,GACrB,IAAQ3B,EAAS2B,EAAMC,cAAf5B,KAER,EAAK6B,UAAS,SAAAC,GAAS,sBACpB9B,EAAO8B,EAAU9B,GAAQ,O,EAI9B+B,mBAAqB,WACnB,MAA+B,EAAKN,MAGpC,OAHA,EAAQf,KAAR,EAAcC,QAAd,EAAuBC,K,EAMzBoB,gCAAkC,WAChC,IAAIC,EAAgB,EAAKF,qBACrBG,EAAsC,IAAlB,EAAKT,MAAMf,KAAcuB,EAEjD,OAAyB,IAAlBA,EAAsBE,KAAKC,MAAMF,GAAoB,G,4CAG9D,WACE,MAA+BG,KAAKZ,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQwB,KAAKN,qBACbjB,EAAqBuB,KAAKL,kCAEhC,OACE,gCACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACE3B,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB4C,KAAKX,yBAG1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACGN,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcS,QAAQ,+B,GApDhBe,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BtD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,IAAM,gC","file":"static/js/main.50cf9623.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__eQhQ4\",\"statisticItem\":\"Statistics_statisticItem__27Xvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3tc7F\"};","import PropTypes from 'prop-types';\nimport style from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={style.feedbackList}>\n      {options.map(option => (\n        <button\n          type=\"button\"\n          key={option}\n          name={option}\n          onClick={onLeaveFeedback}\n          className={style.btn}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.protTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport style from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <ul className={style.statisticList}>\n      <li className={style.statisticItem}>Good: {good}</li>\n      <li className={style.statisticItem}>Neutral: {neutral}</li>\n      <li className={style.statisticItem}>Bad: {bad}</li>\n      <li className={style.statisticItem}>Total: {total}</li>\n      <li className={style.statisticItem}>\n        Positive Feedback:{positivePercentage}%\n      </li>\n    </ul>\n  </div>\n);\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport style from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={style.section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <h2>{message}</h2>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport FeedbackOptions from './component/FeedbackOptions/FeedbackOptions';\nimport Statistics from './component/Statistics/Statistics';\nimport Section from './component/Section/Section';\nimport Notification from './component/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedbackHandler = event => {\n    const { name } = event.currentTarget;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let totalFeedback = this.countTotalFeedback();\n    let positiveFeedback = (this.state.good * 100) / totalFeedback;\n\n    return totalFeedback !== 0 ? Math.round(positiveFeedback) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.countFeedbackHandler}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"FeedbackOptions_feedbackList__2kda9\",\"btn\":\"FeedbackOptions_btn__3jrUb\"};"],"sourceRoot":""}